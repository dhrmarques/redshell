var products = [];
var nProductSelectTags = 0;

var replaceOptions = function(selectTag, options, prompt) {
  selectTag.empty().append('<option value="">' + prompt + '</option>');
  for (var i = 0 ; i < options.length ; i++) {
    selectTag.append('<option value="' + options[i][0] + '">' + options[i][1] + '</option>');
  }
}

var whenPickingTaskDomain = function() {
  var domainId = $("#task_domain_id option:selected").val();
  if (domainId == "")
    return null;
  $.ajax({
    url: "<%= Rails.application.routes.url_helpers.pick_domain_tasks_path %>",
    type: "GET",
    data: ("domain_id=" + domainId),
    success: function(data, textStatus, xhr) {
      replaceOptions($("#task_task_type_id"), data.task_types, data.task_types_prompt);
      replaceOptions($("#task_employee_id"), data.employees, data.employees_prompt);
    },
    error: function() {
      alert("Erro ao carregar dados relativos ao dom√≠nio de tarefa.");
    }
  });
}

var whenPickingTaskType = function() {
  var typeId = $("#task_task_type_id option:selected").val();
  if (typeId == "")
    return null;
  $.ajax({
    url: "<%= Rails.application.routes.url_helpers.pick_type_tasks_path %>",
    type: "GET",
    data: ("type_id=" + typeId),
    success: function(data, textStatus, xhr) {
      replaceOptions($("#task_place"), data.places, data.places_prompt);
    },
    error: function() {
      alert("Erro ao carregar dados relativos ao tipo de tarefa.");
    }
  });
}

var selector = function(n, h, q) {
  var str = "";
  if (h)
    str += "#";
  str += "product_" + n;
  if (q)
    str += "_qty";
  return str;
}

var rollbackSelectTags = function() {
  var ps = $("#products-select-group").children();
  for (var i = 1 ; i <= ps.length ; i++) {
    $("#" + ps[i - 1].children[0].id).attr("id", selector(i, false, false));
    $("#" + ps[i - 1].children[1].id).attr("id", selector(i, false, true));
  }
}

var whenPickingProduct = function(params) {
  var index = params.data;
  var before_change = $(this).data('pre');
  var i1 = selector(index, true, false);
  var i1 = selector(index, true, false);
  var i2 = selector(index, true, true);
  $(i1).siblings().first().empty();

  var productId = $(i1).val();
  if (productId == "") {
    if (nProductSelectTags > 1) {
      nProductSelectTags -= 1;
      $(i1).parent().remove();
    }
    rollbackSelectTags();
    return null;
  }

  var productIndex = null;
  var selectQtyStr = "";
  for (var j = 0 ; j < products.length ; j++)
    if (products[j].id == productId)
      productIndex = j;
  for (var j = 1 ; j <= products[productIndex].quantity ; j++)
    selectQtyStr += "\n\t\t<option value='" + j + "'>" + j + "</option>";
  
  $(i2).append(selectQtyStr);
  if (before_change == "")
    addProductsOption([]);
  $(this).data('pre', $(this).val());
}

var addProductsOption = function(productsArray) {
  if (products.length == 0 && productsArray.length > 0)
    products = productsArray;
  nProductSelectTags += 1;
  var index = nProductSelectTags;

  var i1 = selector(index, false, false);
  var i2 = selector(index, false, true);
  var i3 = selector(index, true, false);
  var selectStr = "\n\t<select id='" + i1 + "' name='" + i1 + "'>";
  selectStr += "\n\t\t<option value=''>Escolher um produto externo...</option>";
  for (var i = 0 ; i < products.length ; i++) {
    selectStr = selectStr + "\n\t\t<option value='" + products[i].id + "'>" + products[i].title + "</option>";
  }
  selectStr += "\n\t</select>";

  var selectQtyStr = "\n\t<select id='" + i2 + "' name='" + i2 + "'></select>";
  
  $("#products-select-group").append("\n<p>" + selectStr + selectQtyStr + "\n</p>");
  $(document).on("change", i3, nProductSelectTags, whenPickingProduct);
  $(i3).data('pre', $(i3).val());
}

var addProductsDataToHiddenInput = function() {
  $("#products-select-group").prepend("<input type='hidden' value='" +
      JSON.stringify(products) + "' name='product_0_all'/>");
}

var whenUsingProducts = function() {
  $("#fetch-products").append("<i class='fa fa-spinner fa-pulse'></i>");
  $.ajax({
    url: "<%= Rails.application.routes.url_helpers.list_products_tasks_path %>",
    type: "GET",
    success: function(data, textStatus, xhr) {
      addProductsOption(data.products);
      addProductsDataToHiddenInput();
      $("#fetch-products").hide();
    },
    error: function(data, textStatus, xhr) {
      alert("Erro:\n" + $.parseJSON(xhr.responseText).errors);
    }
  });
}

$(document).on("change", "#task_domain_id",    whenPickingTaskDomain);
$(document).on("change", "#task_task_type_id", whenPickingTaskType);
$(document).on("click", "#fetch-products",    whenUsingProducts);
